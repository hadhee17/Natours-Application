{"version":3,"sources":["mapBox.js","alert.js","login.js","updateSettings.js","index.js"],"names":["displayMap","location","map","L","zoomControl","tileLayer","attribution","crossOrigin","addTo","points","forEach","loc","push","coordinates","marker","bindPopup","day","description","autoClose","openPopup","bounds","latLngBounds","pad","fitBounds","scrollWheelZoom","disable","exports","hideAlert","el","document","querySelector","parentElement","removeChild","showAlert","type","msg","markup","insertAdjacentHTML","window","setTimeout","_alert","require","login","email","password","axios","method","url","API_URL","data","status","assign","err","response","message","logout","reload","updateSettings","toUpperCase","_mapBox","_login","_updateSettings","mapBox","getElementById","loginForm","logOutBtn","userDataForm","userPasswordForm","JSON","parse","dataset","locations","addEventListener","e","preventDefault","value","form","FormData","append","files","textContent","currentPassword","passwordConfirm"],"mappings":"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","file":"bundle.js","sourceRoot":"","sourcesContent":["export const displayMap = (location) => {\r\n  var map = L.map('map', { zoomControl: false }); //to disable + - zoom\r\n  // var map = L.map('map', { zoomControl: false }).setView([31.111745, -118.113491], );\r\n\r\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution:\r\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    crossOrigin: '',\r\n  }).addTo(map);\r\n\r\n  const points = [];\r\n  location.forEach((loc) => {\r\n    points.push([loc.coordinates[1], loc.coordinates[0]]);\r\n    L.marker([loc.coordinates[1], loc.coordinates[0]])\r\n      .addTo(map)\r\n      .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\r\n        autoClose: false,\r\n      })\r\n      .openPopup();\r\n  });\r\n  const bounds = L.latLngBounds(points).pad(0.5);\r\n  map.fitBounds(bounds);\r\n\r\n  map.scrollWheelZoom.disable(); //to disable zoom by mouse wheel\r\n};\r\n","/* eslint-disable */\r\n\r\nexport const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n// type is 'success' or 'error'\r\nexport const showAlert = (type, msg) => {\r\n  hideAlert();\r\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","import { showAlert } from './alert';\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${API_URL}/login`, // ðŸ”¥ dynamic\r\n      data: { email, password },\r\n    });\r\n\r\n    if (res.data.status === 'Success') {\r\n      showAlert('success', 'Logged in successfully!');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    }\r\n  } catch (err) {\r\n    if (err.response && err.response.data) {\r\n      showAlert('error', err.response.data.message);\r\n    } else {\r\n      showAlert('error', 'Error logging in. Please try again.');\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${API_URL}/logout`, // ðŸ”¥ dynamic\r\n    });\r\n    if (res.data.status === 'success') location.reload(true);\r\n  } catch (err) {\r\n    showAlert('error', 'Error logging out! Try again.');\r\n  }\r\n};\r\n","import { showAlert } from './alert';\r\nexport const updateSettings = async (data, type) => {\r\n  try {\r\n    const url =\r\n      type === 'password'\r\n        ? 'http://127.0.0.1:3000/api/v1/users/updateMyPassword'\r\n        : 'http://127.0.0.1:3000/api/v1/users/updateMe';\r\n\r\n    const res = await axios({\r\n      method: 'PATCH',\r\n      url,\r\n      data,\r\n    });\r\n\r\n    if (res.data.status === 'Success') {\r\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\r\n    }\r\n  } catch (err) {\r\n    showAlert('error', err.response.data.message);\r\n  }\r\n};\r\n","import { displayMap } from './mapBox';\r\nimport { login } from './login';\r\nimport { logout } from './login';\r\nimport { updateSettings } from './updateSettings';\r\n\r\n//dom element\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form--login');\r\nconst logOutBtn = document.querySelector('.nav__el--logout');\r\nconst userDataForm = document.querySelector('.form-user-data');\r\nconst userPasswordForm = document.querySelector('.form-user-password');\r\n\r\nif (mapBox) {\r\n  const location = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(location);\r\n}\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    await login(email, password);\r\n  });\r\n}\r\n\r\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\r\n\r\nif (userDataForm)\r\n  userDataForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const form = new FormData();\r\n    form.append('name', document.getElementById('name').value);\r\n    form.append('email', document.getElementById('email').value);\r\n    form.append('photo', document.getElementById('photo').files[0]);\r\n\r\n    updateSettings(form, 'data');\r\n  });\r\n\r\nif (userPasswordForm) {\r\n  userPasswordForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\r\n    const currentPassword = document.getElementById('password-current').value;\r\n    const password = document.getElementById('password').value;\r\n    const passwordConfirm = document.getElementById('password-confirm').value;\r\n    await updateSettings(\r\n      { currentPassword, password, passwordConfirm },\r\n      'password',\r\n    );\r\n    document.querySelector('.btn--save-password').textContent = 'Save password';\r\n    document.getElementById('password-current').value = '';\r\n    document.getElementById('password').value = '';\r\n    document.getElementById('password-confirm').value = '';\r\n  });\r\n}\r\n"]}